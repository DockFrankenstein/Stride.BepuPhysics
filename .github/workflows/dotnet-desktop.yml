name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]    
    tags:
      - 'v*.*.*.*'

jobs:

  build:

    env:
      Configuration: 'Release'
      Solution_Name: 'Stride.BepuPhysics.sln'

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration

    # Build the solution in Release configuration
    - name: Build the solution in Release configuration
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /t:Build
      
    - name: display files
      run: Get-ChildItem -Path "D:\a" -Force -Recurse

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}  
        draft: false
        prerelease: false

    - name: Upload Release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: D:\a\ReleaseWin.zip
        asset_name: ReleaseWin.zip
        asset_content_type: application/zip
